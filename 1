passport.use(new localStrategy(
	(email,password,done)=>{
		users.findOne({email:email},(err,user)=>{
			if(err){
				return done(err);
			}
			if(!user){
				return done(null,false);
			}
			if(user.password != password){
				return done(null,false);
			}
			return done(null,user);
		});	
	}
));
||
passport.use(new localStrategy(
  function(email, password, done) {
    users.findOne({ email: email }, function(err, user) {
      if (err) { return done(err); }
      if (!user) {
        return done(null, false);
      }
      if (!user.validPassword(password)) {
        return done(null, false);
      }
      return done(null, user);
    });
  }
));


//============================================================

passport.serializeUser((user,done)=>{
	done(null,user.email);
});

passport.deserializeUser((email,done)=>{
	users.findOne({email:email},(err,user)=>{
		done(err,user);
	});
});

// ===============================================================

mongoose.connect('mongodb://localhost/test-passportjs',{ useUnifiedTopology: true , useNewUrlParser: true } );